{"version":3,"file":"static/js/415.f7af86f6.chunk.js","mappings":"wLAIMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAkCtB,UAhCa,WACX,OAA0BC,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAS5B,OARAH,EAAU,YACVI,EAAAA,EAAAA,IAAUF,GACPG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPR,EAASQ,EAAKC,SACdP,EAAU,WACX,IACAQ,OAAM,kBAAMR,EAAU,WAAhB,IAEF,WACLE,EAAgBO,OACjB,CACF,GAAE,KAGD,4BACc,YAAXV,IAAwB,sCACb,aAAXA,IACC,SAAC,EAAAW,SAAD,CAAUC,UAAU,+CAApB,UACE,SAACjB,EAAD,CAAUG,MAAOA,MAGT,aAAXE,IAAyB,kDAG/B,C,0NCnCKa,EAAM,mCACNC,EAAW,gCAEXT,EAAY,SAAAF,GAAe,OAC/BY,EAAAA,EAAAA,IAAA,UAAaD,EAAb,uCAAoDD,GAAO,CACzDG,OAAQb,EAAgBa,QAFK,EAK3BC,EAAkB,SAACC,EAASf,GAAV,OACtBY,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8BI,EAA9B,oBAAiDL,GAAO,CACtDG,OAAQb,EAAgBa,QAFJ,EAKlBG,EAAS,mCAAG,oGACOJ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,oCACkBD,IAFzB,cACVO,EADU,OAIhBC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,EAASb,KAAKkB,SAJ5C,kBAKTL,EAASb,KAAKkB,QALL,2CAAH,qDAQTC,EAAU,SAACC,EAAIxB,GAAL,OACdY,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8Ba,EAA9B,4BAAoDd,GAAO,CACzDG,OAAQb,EAAgBa,QAFZ,EAKVY,EAAa,SAACD,EAAIxB,GAAL,OACjBY,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAA8Ba,EAA9B,4BAAoDd,GAAO,CACzDG,OAAQb,EAAgBa,QAFT,EAKba,EAAW,SAACC,EAAY3B,EAAiB4B,GACzC5B,GACFA,EAAgBO,QAGlB,IAAMsB,EAAoB,IAAI5B,gBAG9B,OAFA2B,EAAsBC,GAEfjB,EAAAA,EAAAA,IAAA,UACFD,EADE,gCAC8BD,EAD9B,kBAC2CiB,EAD3C,+BAEL,CACEd,OAAQgB,EAAkBhB,QAG/B,C","sources":["pages/Home.jsx","utils/getFunctions.js"],"sourcesContent":["import { lazy } from 'react';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { getTrends } from 'utils/getFunctions';\nconst FilmList = lazy(() => import('components/FilmList/FilmList'));\n\nconst Home = () => {\n  const [films, setFilms] = useState();\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setStatus('pending');\n    getTrends(abortController)\n      .then(({ data }) => {\n        setFilms(data.results);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <main>\n      {status === 'pending' && <p>Loading...</p>}\n      {status === 'resolved' && (\n        <Suspense fallback={<p>Loading FilmList...</p>}>\n          <FilmList films={films} />\n        </Suspense>\n      )}\n      {status === 'rejected' && <p>Something went wrong</p>}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst KEY = '63240915768e2fa639cf91287e69284e';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrends = abortController =>\n  axios.get(`${BASE_URL}trending/movie/week?api_key=${KEY}`, {\n    signal: abortController.signal,\n  });\n\nconst getMovieDetails = (movieId, abortController) =>\n  axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}`, {\n    signal: abortController.signal,\n  });\n\nconst getGenres = async () => {\n  const responce = await axios.get(\n    `${BASE_URL}genre/movie/list?api_key=${KEY}`\n  );\n  localStorage.setItem('genres', JSON.stringify(responce.data.genres));\n  return responce.data.genres;\n};\n\nconst getCast = (id, abortController) =>\n  axios.get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`, {\n    signal: abortController.signal,\n  });\n\nconst getReviews = (id, abortController) =>\n  axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`, {\n    signal: abortController.signal,\n  });\n\nconst getMovie = (searchName, abortController, updateAbortController) => {\n  if (abortController) {\n    abortController.abort();\n  }\n\n  const newAborController = new AbortController();\n  updateAbortController(newAborController);\n\n  return axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${searchName}&page=1&include_adult=false`,\n    {\n      signal: newAborController.signal,\n    }\n  );\n};\n\nexport { getTrends, getMovieDetails, getGenres, getCast, getReviews, getMovie };\n"],"names":["FilmList","lazy","useState","films","setFilms","status","setStatus","useEffect","abortController","AbortController","getTrends","then","data","results","catch","abort","Suspense","fallback","KEY","BASE_URL","axios","signal","getMovieDetails","movieId","getGenres","responce","localStorage","setItem","JSON","stringify","genres","getCast","id","getReviews","getMovie","searchName","updateAbortController","newAborController"],"sourceRoot":""}